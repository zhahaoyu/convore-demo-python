# coding: utf-8

"""
    Convore API

    Convore API v1.0.0

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from convore_api_client.models.page_draft import PageDraft

class TestPageDraft(unittest.TestCase):
    """PageDraft unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PageDraft:
        """Test PageDraft
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PageDraft`
        """
        model = PageDraft()
        if include_optional:
            return PageDraft(
                data = [
                    convore_api_client.models.draft.Draft(
                        id = 'drft_01h2xcejqtf2nbrexx3vqjhp41', 
                        channel_id = 'chnnl_01h2xcejqtf2nbrexx3vqjhp41', 
                        conversation_id = 'chnnl_01h2xcejqtf2nbrexx3vqjhp41', 
                        message_id = 'msg_01h2xcejqtf2nbrexx3vqjhp41', 
                        reply_to_message_id = 'msg_01h2xcejqtf2nbrexx3vqjhp41', 
                        reply_type = 'reply', 
                        sender = convore_api_client.models.message_participant.MessageParticipant(
                            name = 'John Doe', 
                            handle = convore_api_client.models.contact_handle.ContactHandle(
                                type = 'email', 
                                value = 'john@example.com', ), 
                            role = 'from', ), 
                        recipients = [
                            convore_api_client.models.message_participant.MessageParticipant(
                                name = 'John Doe', 
                                handle = convore_api_client.models.contact_handle.ContactHandle(
                                    type = 'email', 
                                    value = 'john@example.com', ), 
                                role = 'from', )
                            ], 
                        subject = 'Issue with Verification Process', 
                        raw_body = '...', 
                        body = '...', 
                        quote_body = 'On Dec 15, 2023, at 6:54 PM, John Doe <john@example.com> wrote: ...', 
                        attachments = [
                            convore_api_client.models.attachment.Attachment(
                                id = 'attch_01hcf9x766fqk8g7hz74363j9q', 
                                conversation_id = 'conv_01h2xcejqtf2nbrexx3vqjhp41', 
                                draft_id = 'drft_01h2xcejqtf2nbrexx3vqjhp41', 
                                message_id = '', 
                                content_type = 'image/png', 
                                filename = 'image.png', 
                                is_inline = True, 
                                content_id = '', 
                                size = 14039, )
                            ], 
                        external_draft_id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                next_cursor = '',
                total_count = 56
            )
        else:
            return PageDraft(
                data = [
                    convore_api_client.models.draft.Draft(
                        id = 'drft_01h2xcejqtf2nbrexx3vqjhp41', 
                        channel_id = 'chnnl_01h2xcejqtf2nbrexx3vqjhp41', 
                        conversation_id = 'chnnl_01h2xcejqtf2nbrexx3vqjhp41', 
                        message_id = 'msg_01h2xcejqtf2nbrexx3vqjhp41', 
                        reply_to_message_id = 'msg_01h2xcejqtf2nbrexx3vqjhp41', 
                        reply_type = 'reply', 
                        sender = convore_api_client.models.message_participant.MessageParticipant(
                            name = 'John Doe', 
                            handle = convore_api_client.models.contact_handle.ContactHandle(
                                type = 'email', 
                                value = 'john@example.com', ), 
                            role = 'from', ), 
                        recipients = [
                            convore_api_client.models.message_participant.MessageParticipant(
                                name = 'John Doe', 
                                handle = convore_api_client.models.contact_handle.ContactHandle(
                                    type = 'email', 
                                    value = 'john@example.com', ), 
                                role = 'from', )
                            ], 
                        subject = 'Issue with Verification Process', 
                        raw_body = '...', 
                        body = '...', 
                        quote_body = 'On Dec 15, 2023, at 6:54 PM, John Doe <john@example.com> wrote: ...', 
                        attachments = [
                            convore_api_client.models.attachment.Attachment(
                                id = 'attch_01hcf9x766fqk8g7hz74363j9q', 
                                conversation_id = 'conv_01h2xcejqtf2nbrexx3vqjhp41', 
                                draft_id = 'drft_01h2xcejqtf2nbrexx3vqjhp41', 
                                message_id = '', 
                                content_type = 'image/png', 
                                filename = 'image.png', 
                                is_inline = True, 
                                content_id = '', 
                                size = 14039, )
                            ], 
                        external_draft_id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
        )
        """

    def testPageDraft(self):
        """Test PageDraft"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
