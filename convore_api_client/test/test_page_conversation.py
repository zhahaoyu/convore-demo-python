# coding: utf-8

"""
    Convore API

    Convore API v1.0.0

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from convore_api_client.models.page_conversation import PageConversation

class TestPageConversation(unittest.TestCase):
    """PageConversation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PageConversation:
        """Test PageConversation
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PageConversation`
        """
        model = PageConversation()
        if include_optional:
            return PageConversation(
                data = [
                    convore_api_client.models.conversation.Conversation(
                        id = 'conv_01h2xcejqtf2nbrexx3vqjhp41', 
                        channel_id = 'chnnl_01h2xcejqtf2nbrexx3vqjhp41', 
                        status = 'open', 
                        priority = 'no_priority', 
                        labels = [
                            convore_api_client.models.label.Label(
                                id = 'lbl_01hggtgr3yfm3t450q1hq4vs9s', 
                                name = 'Technical support', 
                                description = 'Help with website or app functionality, technical glitches, and navigation.', 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                type = 'SHARED', 
                                channel_id = 'chnnl_01h2xcejqtf2nbrexx3vqjhp41', 
                                external_label_id = 'ext_lbl_23kj2b3k4j2', 
                                shared_label_id = '', )
                            ], 
                        participants = [
                            convore_api_client.models.message_participant.MessageParticipant(
                                name = 'John Doe', 
                                handle = convore_api_client.models.contact_handle.ContactHandle(
                                    type = 'email', 
                                    value = 'john@example.com', ), 
                                role = 'from', )
                            ], 
                        subject = 'Issue with Verification Process', 
                        snippet = '', 
                        is_unread = True, 
                        last_message_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        external_conversation_id = '', 
                        message_count = 56, 
                        draft_count = 56, 
                        attachment_count = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                next_cursor = '',
                total_count = 56
            )
        else:
            return PageConversation(
                data = [
                    convore_api_client.models.conversation.Conversation(
                        id = 'conv_01h2xcejqtf2nbrexx3vqjhp41', 
                        channel_id = 'chnnl_01h2xcejqtf2nbrexx3vqjhp41', 
                        status = 'open', 
                        priority = 'no_priority', 
                        labels = [
                            convore_api_client.models.label.Label(
                                id = 'lbl_01hggtgr3yfm3t450q1hq4vs9s', 
                                name = 'Technical support', 
                                description = 'Help with website or app functionality, technical glitches, and navigation.', 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                type = 'SHARED', 
                                channel_id = 'chnnl_01h2xcejqtf2nbrexx3vqjhp41', 
                                external_label_id = 'ext_lbl_23kj2b3k4j2', 
                                shared_label_id = '', )
                            ], 
                        participants = [
                            convore_api_client.models.message_participant.MessageParticipant(
                                name = 'John Doe', 
                                handle = convore_api_client.models.contact_handle.ContactHandle(
                                    type = 'email', 
                                    value = 'john@example.com', ), 
                                role = 'from', )
                            ], 
                        subject = 'Issue with Verification Process', 
                        snippet = '', 
                        is_unread = True, 
                        last_message_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        external_conversation_id = '', 
                        message_count = 56, 
                        draft_count = 56, 
                        attachment_count = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
        )
        """

    def testPageConversation(self):
        """Test PageConversation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
